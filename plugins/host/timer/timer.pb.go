// Code generated by protoc-gen-go-plugin. DO NOT EDIT.
// versions:
// 	protoc-gen-go-plugin v0.1.0
// 	protoc               v5.29.3
// source: host/timer/timer.proto

package timer

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`                // Serialized data to pass to the callback
	Delay   int32  `protobuf:"varint,3,opt,name=delay,proto3" json:"delay,omitempty"`                   // Delay in seconds
	TimerId string `protobuf:"bytes,4,opt,name=timer_id,json=timerId,proto3" json:"timer_id,omitempty"` // Optional custom timer ID (if not provided, one will be generated)
}

func (x *TimerRequest) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *TimerRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TimerRequest) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *TimerRequest) GetTimerId() string {
	if x != nil {
		return x.TimerId
	}
	return ""
}

type TimerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimerId string `protobuf:"bytes,1,opt,name=timer_id,json=timerId,proto3" json:"timer_id,omitempty"` // ID to reference this timer
}

func (x *TimerResponse) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *TimerResponse) GetTimerId() string {
	if x != nil {
		return x.TimerId
	}
	return ""
}

type CancelTimerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimerId string `protobuf:"bytes,1,opt,name=timer_id,json=timerId,proto3" json:"timer_id,omitempty"` // ID of timer to cancel
}

func (x *CancelTimerRequest) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *CancelTimerRequest) GetTimerId() string {
	if x != nil {
		return x.TimerId
	}
	return ""
}

type CancelTimerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether cancellation was successful
}

func (x *CancelTimerResponse) ProtoReflect() protoreflect.Message {
	panic(`not implemented`)
}

func (x *CancelTimerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// go:plugin type=host version=1
type TimerService interface {
	RegisterTimer(context.Context, *TimerRequest) (*TimerResponse, error)
	CancelTimer(context.Context, *CancelTimerRequest) (*CancelTimerResponse, error)
}
